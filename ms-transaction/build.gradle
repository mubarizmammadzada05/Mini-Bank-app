plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'az.kb'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
    testImplementation 'org.spockframework:spock-spring:2.4-M4-groovy-4.0'
    testImplementation 'org.apache.groovy:groovy:4.0.22'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect { fileTree(dir: it,
                exclude: [
                        'az/kb/mstransaction/model/**',
                        'az/kb/mstransaction/client/**',
                        'az/kb/mstransaction/config/**',
                        'az/kb/mstransaction/constant/**',
                        'az/kb/mstransaction/entity/**',
                        'az/kb/mstransaction/enums/**',
                        'az/kb/mstransaction/exception/**',
                        'az/kb/mstransaction/repository/**',
                        'az/kb/mstransaction/util/**',
                        '**/MsTransactionApplication.class'
                ])
        }))
    }
}
tasks.named('test') {
    useJUnitPlatform()
}